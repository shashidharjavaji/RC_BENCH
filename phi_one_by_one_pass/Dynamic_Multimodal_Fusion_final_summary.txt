=== Paper Analysis Summary ===

Raw Claims:

```json
{
    "claims": [
        {
            "claim_id": 1,
            "claim_text": "Dynamic multimodal fusion (DynMM) can reduce computation costs by 46.5% with only a negligible accuracy loss on CMU-MOSEI sentiment analysis.",
            "location": "Abstract",
            "claim_type": "Result",
            "exact_quote": "DynMM can reduce the computation costs by 46.5% with only a negligible accuracy loss (CMU-MOSEI sentiment analysis)"
        },
        {
            "claim_id": 2,
            "claim_text": "DynMM improves segmentation performance with over 21% savings in computation on NYU Depth V2 semantic segmentation.",
            "location": "Abstract",
            "claim_type": "Result",
            "exact_quote": "improve segmentation performance with over 21% savings in computation (NYU Depth V2 semantic segmentation)"
        },
        {
            "claim_id": 3,
            "claim_text": "DynMM can reduce the computation costs by 55.1% with only a -0.4% mIoU drop on RGB-D semantic segmentation.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM-a reduces MAdds by 55.1% with only -0.4% mIoU drop."
        },
        {
            "claim_id": 4,
            "claim_text": "DynMM achieves a mIoU improvement of 0.7% and 21.1% reduction in MAdds on RGB-D semantic segmentation.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM-b achieves a mIoU improvement of 0.7% and 21.1% reduction in MAdds."
        },
        {
            "claim_id": 5,
            "claim_text": "DynMM is more robust to noisy multimodal data compared with the static ESANet.",
            "location": "Experiments - Robustness",
            "claim_type": "Result",
            "exact_quote": "DynMM is more robust to noisy multimodal data compared with the static ESANet."
        },
        {
            "claim_id": 6,
            "claim_text": "DynMM can adaptively fuse multimodal data during inference.",
            "location": "Introduction",
            "claim_type": "Method",
            "exact_quote": "we propose dynamic multimodal fusion (DynMM), a new approach that adaptively fuses inputs during inference."
        },
        {
            "claim_id": 7,
            "claim_text": "DynMM enjoys the benefits of reduced computation, improved representation power and robustness.",
            "location": "Method",
            "claim_type": "Result",
            "exact_quote": "dynamic fusion leads to computational savings for 'easy' inputs and preserves representation power for 'hard' instances."
        },
        {
            "claim_id": 8,
            "claim_text": "DynMM provides a new direction towards dynamic multimodal network design.",
            "location": "Abstract",
            "claim_type": "Conclusion",
            "exact_quote": "We believe our approach opens a new direction towards dynamic multimodal network design."
        },
        {
            "claim_id": 9,
            "claim_text": "DynMM can be applied to a wide range of multimodal tasks.",
            "location": "Abstract",
            "claim_type": "Conclusion",
            "exact_quote": "our approach opens a new direction towards dynamic multimodal network design, with applications to a wide range of multimodal tasks."
        },
        {
            "claim_id": 10,
            "claim_text": "DynMM can reduce noise and boost performance in multimodal tasks.",
            "location": "Experiments - Robustness",
            "claim_type": "Result",
            "exact_quote": "DynMM is robust to noise and provides a good prediction for both scenarios."
        },
        {
            "claim_id": 11,
            "claim_text": "DynMM offers a wide range of choices that balance computation and learning behavior well.",
            "location": "Experiments - MM-IMDB",
            "claim_type": "Result",
            "exact_quote": "DynMM offers a wide range of choices that balance computation and learning behavior well."
        },
        {
            "claim_id": 12,
            "claim_text": "DynMM can match the performance of methods that use ResNet-101 as the backbone with significantly lower computation costs.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that use ResNet-101 as the backbone and involve significantly larger MAdds."
        },
        {
            "claim_id": 13,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 14,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 15,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 16,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 17,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 18,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 19,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 20,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 21,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 22,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 23,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 24,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 25,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 26,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 27,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 28,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 29,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 30,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 31,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 32,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 33,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 34,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 35,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 36,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 37,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 38,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 39,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 40,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 41,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 42,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 43,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 44,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 45,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 46,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 47,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 48,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 49,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 50,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 51,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 52,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 53,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 54,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 55,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 56,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 57,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 58,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 59,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 60,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 61,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 62,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 63,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 64,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 65,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 66,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 67,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 68,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 69,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 70,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 71,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 72,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 73,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 74,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 75,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 76,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 77,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 78,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 79,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 80,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 81,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 82,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
        {
            "claim_id": 83,
            "claim_text": "DynMM's performance can match methods that involve significantly larger MAdds.",
            "location": "Experiments - Semantic Segmentation",
            "claim_type": "Result",
            "exact_quote": "DynMM's performance can match methods that involve significantly larger MAdds."
        },
       

Raw Evidence:


Raw Conclusions:


Execution Times:
claims_analysis_time: 722.19 seconds
evidence_analysis_time: 424.39 seconds
conclusions_analysis_time: 780.03 seconds
total_execution_time: 1933.75 seconds
